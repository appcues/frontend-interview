"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _chunkE = require("./chunk-e8276423.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  &.button {\n    border-radius: ", ";\n    border-width: 2px;\n    border-style: solid;\n    box-sizing: border-box;\n    padding: 8px 12px;\n    text-align: center;\n    font-weight: ", ";\n    -webkit-font-smoothing: antialiased;\n    background-color: white;\n    text-decoration: none;\n    white-space: nowrap;\n    cursor: pointer;\n    z-index: 0;\n    transition: transform 0.25s;\n\n    &:active {\n      transform: scale(0.95);\n    }\n    &:active,\n    &.active {\n      background-image: none;\n    }\n\n    ", ";\n\n    &.button-small {\n      font-size: 13px;\n      font-weight: bold;\n      padding: 1px 10px;\n    }\n\n    &.button-block {\n      width: 100%;\n      display: block;\n    }\n\n    &:hover {\n      border-color: ", ";\n      color: ", ";\n    }\n\n    &.disabled {\n      cursor: not-allowed;\n      border-color: ", ";\n      color: ", ";\n    }\n\n    &.button-transparent {\n      background-color: transparent;\n      border-color: transparent;\n      color: ", ";\n      margin: 0;\n      text-decoration: none;\n    }\n\n    &.button-primary {\n      ", ";\n    }\n\n    &.button-primary-alt {\n      ", ";\n      &:hover,\n      &:focus,\n      &.focus,\n      &:active,\n      &.active {\n        color: ", ";\n      }\n    }\n    &.button-default {\n      ", ";\n    }\n\n    &.button-default-alt {\n      ", ";\n    }\n\n    &.button-secondary {\n      ", ";\n    }\n\n    &.button-secondary-alt {\n      ", ";\n    }\n\n    &.button-warning {\n      ", ";\n    }\n\n    &.button-warning-alt {\n      ", ";\n      &:hover,\n      &:focus,\n      &.focus,\n      &:active,\n      &.active {\n        color: ", ";\n      }\n    }\n\n    &.button-success {\n      background-color: ", ";\n      border-color: ", ";\n      color: white;\n\n      &.disabled {\n        background-color: ", ";\n        border-color: ", ";\n      }\n\n      &:not(.disabled) {\n        &:hover {\n          background-color: ", ";\n          border-color: ", ";\n        }\n      }\n    }\n\n    &.button-success-alt {\n      ", ";\n      &:hover,\n      &:focus,\n      &.focus,\n      &:active,\n      &.active {\n        color: ", ";\n        border-color: ", ";\n      }\n    }\n\n    &.operator {\n      background-color: ", ";\n      border: 1px solid ", ";\n      color: ", ";\n      cursor: default;\n      text-transform: uppercase;\n      letter-spacing: 0.05em;\n      font-size: 14px;\n      font-weight: 600;\n      text-align: center;\n      margin-top: 1px;\n      border-radius: 20px;\n      display: block;\n      max-width: 47px;\n      padding: 5px;\n    }\n\n    // Icons in Buttons\n    & > i.fa {\n      font-size: 94%;\n      margin-right: 6px;\n      opacity: 0.7;\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var Button = function (_Component) {
  (0, _chunkB2edacfb.f)(Button, _Component);

  function Button(props) {
    (0, _chunkB2edacfb.b)(this, Button);
    return (0, _chunkB2edacfb.d)(this, (0, _chunkB2edacfb.e)(Button).call(this, props));
  }

  (0, _chunkB2edacfb.c)(Button, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          className = _this$props.className,
          href = _this$props.href,
          onClick = _this$props.onClick,
          onBlur = _this$props.onBlur,
          tabIndex = _this$props.tabIndex,
          target = _this$props.target;
      var options = {
        className: "button ".concat(className ? className : "", " ").concat(disabled ? "disabled" : ""),
        role: href ? "link" : "button",
        tabIndex: tabIndex,
        onClick: disabled ? function () {} : onClick,
        onBlur: disabled ? function () {} : onBlur,
        target: target
      };

      if (href) {
        options.href = href;
      }

      return _react.default.createElement(StyledButton, options, this.props.children);
    }
  }]);
  return Button;
}(_react.Component);

var StyledButton = _styledComponents.default.a.withConfig({
  displayName: "Button__StyledButton",
  componentId: "sc-1qbjfc8-0"
})(_templateObject(), function (props) {
  return props.theme["$border-radius"];
}, function (props) {
  return props.theme["$font-weight-l"];
}, function (props) {
  return (0, _chunkE.b)(props.theme["$gray-50"], "rgba(0,0,0,0)", props.theme["$gray-30"]);
}, function (props) {
  return props.theme["$gray-50"];
}, function (props) {
  return props.theme["$gray-70"];
}, function (props) {
  return (0, _chunkE.d)(0.25, props.theme["$gray-30"]);
}, function (props) {
  return (0, _chunkE.d)(0.25, props.theme["$gray-30"]);
}, function (props) {
  return props.theme["$gray-50"];
}, function (props) {
  return (0, _chunkE.b)("#ffffff", props.theme["$brand-primary"], props.theme["$brand-primary"]);
}, function (props) {
  return (0, _chunkE.b)(props.theme["$brand-primary"], "rgba(0,0,0,0)", props.theme["$brand-primary"]);
}, function (props) {
  return (0, _chunkE.c)(0.1, props.theme["$brand-primary"]);
}, function (props) {
  return (0, _chunkE.b)("#ffffff", props.theme["$gray-50"], props.theme["$gray-50"]);
}, function (props) {
  return (0, _chunkE.b)(props.theme["$gray-50"], "#ffffff", props.theme["$gray-30"]);
}, function (props) {
  return (0, _chunkE.b)("#ffffff", props.theme["$gray-30"], props.theme["$gray-30"]);
}, function (props) {
  return (0, _chunkE.b)(props.theme["$brand-primary"], "#ffffff", "#ffffff");
}, function (props) {
  return (0, _chunkE.b)("#ffffff", props.theme["$brand-warning"], props.theme["$brand-warning"]);
}, function (props) {
  return (0, _chunkE.b)(props.theme["$brand-warning"], "rgba(0,0,0,0)", props.theme["$brand-warning"]);
}, function (props) {
  return (0, _chunkE.c)(0.1, props.theme["$brand-warning"]);
}, function (props) {
  return props.theme["$brand-success"];
}, function (props) {
  return props.theme["$brand-success"];
}, function (props) {
  return (0, _chunkE.d)(0.25, props.theme["$brand-success"]);
}, function (props) {
  return (0, _chunkE.d)(0.25, props.theme["$brand-success"]);
}, function (props) {
  return props.theme["$brand-success-dark"];
}, function (props) {
  return props.theme["$brand-success-dark"];
}, function (props) {
  return (0, _chunkE.b)(props.theme["$brand-success-dark"], "rgba(0,0,0,0)", props.theme["$brand-success"]);
}, function (props) {
  return (0, _chunkE.c)(0.12, props.theme["$brand-success-dark"]);
}, function (props) {
  return props.theme["$brand-success-dark"];
}, function (props) {
  return props.theme["$gray-10"];
}, function (props) {
  return props.theme["$gray-10"];
}, function (props) {
  return props.theme["$gray-50"];
});

Button.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Button"
};
var _default = Button;
exports.default = _default;