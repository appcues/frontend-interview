"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _layout = require("./layout.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _templateObject5() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  padding-bottom: 24px;\n  margin-bottom: 9px;\n  width: 100%;\n\n  font-weight: 600;\n  color: ", ";\n\n  &.withoutMargin {\n    margin: 0;\n  }\n\n  &:focus-within {\n    & ", " {\n      display: inline;\n    }\n  }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _chunkB2edacfb.a)(["\n  color: ", ";\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _chunkB2edacfb.a)(["\n  color: ", ";\n  display: none;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _chunkB2edacfb.a)(["\n  position: absolute;\n  bottom: 0;\n  margin-bottom: 2px;\n\n  font-style: italic;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 19px;\n\n  white-space: nowrap;\n  max-width: 100%;\n  text-overflow: ellipsis;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  font-weight: 600;\n  margin-bottom: 9px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var FormGroup = function (_Component) {
  (0, _chunkB2edacfb.f)(FormGroup, _Component);

  function FormGroup() {
    (0, _chunkB2edacfb.b)(this, FormGroup);
    return (0, _chunkB2edacfb.d)(this, (0, _chunkB2edacfb.e)(FormGroup).apply(this, arguments));
  }

  (0, _chunkB2edacfb.c)(FormGroup, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          children = _this$props.children,
          errorText = _this$props.errorText,
          helperText = _this$props.helperText,
          withoutMargin = _this$props.withoutMargin,
          useLabel = _this$props.useLabel,
          boxProps = (0, _chunkB2edacfb.j)(_this$props, ["label", "children", "errorText", "helperText", "withoutMargin", "useLabel"]);
      return _react.default.createElement(StyledGroup, (0, _chunkB2edacfb.g)({}, boxProps, {
        is: useLabel ? "label" : "div",
        className: (0, _classnames.default)("form-group", withoutMargin && "withoutMargin")
      }), label && _react.default.createElement(GroupLabel, null, label), children, helperText && !errorText && _react.default.createElement(HelperTextSpan, {
        title: helperText
      }, helperText), errorText && _react.default.createElement(ErrorTextSpan, {
        title: errorText
      }, errorText));
    }
  }]);
  return FormGroup;
}(_react.Component);

(0, _chunkB2edacfb.h)(FormGroup, "displayName", "CForm.Group");
(0, _chunkB2edacfb.h)(FormGroup, "propTypes", {
  children: _propTypes.default.node.isRequired,
  label: _propTypes.default.string,
  errorText: _propTypes.default.string,
  helperText: _propTypes.default.string,
  withoutMargin: _propTypes.default.bool,
  useLabel: _propTypes.default.bool,
  maxWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
});
(0, _chunkB2edacfb.h)(FormGroup, "defaultProps", {
  label: "",
  errorText: "",
  helperText: "",
  withoutMargin: false,
  useLabel: true,
  maxWidth: 400
});

var GroupLabel = _styledComponents.default.span.withConfig({
  displayName: "FormGroup__GroupLabel",
  componentId: "sc-1ttynxz-0"
})(_templateObject());

var BaseTextSpan = _styledComponents.default.span.withConfig({
  displayName: "FormGroup__BaseTextSpan",
  componentId: "sc-1ttynxz-1"
})(_templateObject2());

var HelperTextSpan = (0, _styledComponents.default)(BaseTextSpan).withConfig({
  displayName: "FormGroup__HelperTextSpan",
  componentId: "sc-1ttynxz-2"
})(_templateObject3(), function (props) {
  return props.theme["$blue"];
});
var ErrorTextSpan = (0, _styledComponents.default)(BaseTextSpan).withConfig({
  displayName: "FormGroup__ErrorTextSpan",
  componentId: "sc-1ttynxz-3"
})(_templateObject4(), function (props) {
  return props.theme["$red"];
});
var StyledGroup = (0, _styledComponents.default)(_layout.Box).withConfig({
  displayName: "FormGroup__StyledGroup",
  componentId: "sc-1ttynxz-4"
})(_templateObject5(), function (props) {
  return props.theme["$gray-8"];
}, HelperTextSpan);
FormGroup.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CForm.Group",
  "props": {
    "label": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "errorText": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "helperText": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "withoutMargin": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "useLabel": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "maxWidth": {
      "defaultValue": {
        "value": "400",
        "computed": false
      },
      "type": {
        "name": "union",
        "value": [{
          "name": "number"
        }, {
          "name": "string"
        }]
      },
      "required": false,
      "description": ""
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": true,
      "description": ""
    }
  }
};
var _default = FormGroup;
exports.default = _default;