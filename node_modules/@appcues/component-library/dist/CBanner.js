"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _layout = require("./layout.js");

var _chunkE = require("./chunk-e8276423.js");

var _CButton = _interopRequireDefault(require("./CButton.js"));

var _BannerActions = _interopRequireDefault(require("./BannerActions.js"));

var _BannerContent = _interopRequireDefault(require("./BannerContent.js"));

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

require("./chunk-cfb1dc74.js");

require("./Actions.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  padding: 9px 16px;\n\n  display: flex;\n  align-items: center;\n\n  border: 1px solid transparent;\n  border-radius: 6px;\n\n  font-size: 1rem;\n  line-height: 1.375rem;\n  color: ", ";\n\n  &.info {\n    background-color: ", ";\n    border-color: ", ";\n  }\n  &.positive {\n    background-color: ", ";\n    border-color: ", ";\n  }\n  &.warning {\n    background-color: ", ";\n    border-color: ", ";\n  }\n  &.negative {\n    background-color: ", ";\n    border-color: ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var TYPES = {
  INFO: "info",
  POSITIVE: "positive",
  NEGATIVE: "negative",
  WARNING: "warning"
};

var CBanner = function CBanner(_ref) {
  var children = _ref.children,
      text = _ref.text,
      type = _ref.type,
      className = _ref.className,
      primaryActionText = _ref.primaryActionText,
      secondaryActionText = _ref.secondaryActionText,
      onPrimaryAction = _ref.onPrimaryAction,
      onSecondaryAction = _ref.onSecondaryAction,
      boxProps = (0, _chunkB2edacfb.j)(_ref, ["children", "text", "type", "className", "primaryActionText", "secondaryActionText", "onPrimaryAction", "onSecondaryAction"]);
  return _react.default.createElement(StyledBanner, (0, _chunkB2edacfb.g)({}, boxProps, {
    className: (0, _classnames.default)(type, className)
  }), text && _react.default.createElement(CBanner.Content, null, text), children, (onPrimaryAction || onSecondaryAction) && _react.default.createElement(CBanner.Actions, null, onSecondaryAction && _react.default.createElement(_CButton.default, {
    onClick: onSecondaryAction
  }, secondaryActionText), onPrimaryAction && _react.default.createElement(_CButton.default, {
    type: type,
    onClick: onPrimaryAction
  }, primaryActionText)));
};

CBanner.displayName = "CBanner";

var BannerType = _propTypes.default.oneOf(Object.values(TYPES));

CBanner.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  type: BannerType,
  text: _propTypes.default.string,
  primaryActionText: _propTypes.default.string,
  secondaryActionText: _propTypes.default.string,
  onPrimaryAction: _propTypes.default.func,
  onSecondaryAction: _propTypes.default.func
};
CBanner.defaultProps = {
  type: TYPES.INFO,
  className: "",
  text: "",
  primaryActionText: "Okay",
  secondaryActionText: "Cancel",
  onPrimaryAction: null,
  onSecondaryAction: null,
  width: "100%"
};
CBanner.enums = {
  BannerType: TYPES
};
CBanner.Actions = _BannerActions.default;
CBanner.Content = _BannerContent.default;
var StyledBanner = (0, _styledComponents.default)(_layout.Box).withConfig({
  displayName: "CBanner__StyledBanner",
  componentId: "sc-1cylhzi-0"
})(_templateObject(), function (props) {
  return props.theme["$gray-7"];
}, function (props) {
  return props.theme["$blue-light"];
}, function (props) {
  return (0, _chunkE.a)(0.9, props.theme["$blue-dark"]);
}, function (props) {
  return props.theme["$green-light"];
}, function (props) {
  return (0, _chunkE.a)(0.9, props.theme["$green-dark"]);
}, function (props) {
  return props.theme["$yellow-light"];
}, function (props) {
  return (0, _chunkE.a)(0.9, props.theme["$yellow-dark"]);
}, function (props) {
  return props.theme["$red-light"];
}, function (props) {
  return (0, _chunkE.a)(0.9, props.theme["$red-dark"]);
});
CBanner.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CBanner",
  "props": {
    "type": {
      "defaultValue": {
        "value": "\"info\"",
        "computed": false
      },
      "type": {
        "name": "custom",
        "raw": "BannerType"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "text": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "primaryActionText": {
      "defaultValue": {
        "value": "\"Okay\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "secondaryActionText": {
      "defaultValue": {
        "value": "\"Cancel\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "onPrimaryAction": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "onSecondaryAction": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "width": {
      "defaultValue": {
        "value": "\"100%\"",
        "computed": false
      },
      "required": false
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    }
  }
};
var _default = CBanner;
exports.default = _default;
CBanner.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CBanner",
  "props": {
    "type": {
      "defaultValue": {
        "value": "\"info\"",
        "computed": false
      },
      "type": {
        "name": "custom",
        "raw": "BannerType"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "text": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "primaryActionText": {
      "defaultValue": {
        "value": "\"Okay\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "secondaryActionText": {
      "defaultValue": {
        "value": "\"Cancel\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "onPrimaryAction": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "onSecondaryAction": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "width": {
      "defaultValue": {
        "value": "\"100%\"",
        "computed": false
      },
      "required": false
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    }
  }
};