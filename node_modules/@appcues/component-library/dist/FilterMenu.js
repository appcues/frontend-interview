"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _CLink = _interopRequireDefault(require("./CLink.js"));

var _chunk5423f15f = require("./chunk-5423f15f.js");

require("prop-types");

require("react-router-dom");

require("classnames");

require("./layout.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

require("./CFontIcon.js");

require("react-dom");

require("./chunk-5ef88ed1.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  position: relative;\n  z-index: 1;\n\n  margin-top: -16px;\n  padding: 8px 24px 24px;\n\n  border-radius: 0 0 6px 6px;\n  background-color: white;\n  text-align: right;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var FilterMenu = function (_PureComponent) {
  (0, _chunkB2edacfb.f)(FilterMenu, _PureComponent);

  function FilterMenu() {
    var _getPrototypeOf2;

    var _this;

    (0, _chunkB2edacfb.b)(this, FilterMenu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _chunkB2edacfb.d)(this, (_getPrototypeOf2 = (0, _chunkB2edacfb.e)(FilterMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _chunkB2edacfb.h)((0, _chunkB2edacfb.m)(_this), "onClickClear", function () {
      var _this$props = _this.props,
          filterProps = _this$props.filterProps,
          selectRef = _this$props.selectRef;
      filterProps.clearValue();
      selectRef.current.select && selectRef.current.select.blur();
    });
    return _this;
  }

  (0, _chunkB2edacfb.c)(FilterMenu, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          isClearable = _this$props2.isClearable,
          filterProps = _this$props2.filterProps;
      var value = filterProps.selectProps.value,
          isMulti = filterProps.isMulti;
      var hasValue = Array.isArray(value) ? value && !!value.length : !!value;
      return _react.default.createElement(_chunk5423f15f.a.Menu, filterProps, filterProps.children, hasValue && isClearable && _react.default.createElement(ClearRow, null, _react.default.createElement(_CLink.default, {
        onClick: this.onClickClear
      }, "Clear")));
    }
  }]);
  return FilterMenu;
}(_react.PureComponent);

var ClearRow = _styledComponents.default.div.withConfig({
  displayName: "FilterMenu__ClearRow",
  componentId: "yk83xi-0"
})(_templateObject());

FilterMenu.__docgenInfo = {
  "description": "",
  "methods": [{
    "name": "onClickClear",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }],
  "displayName": "FilterMenu"
};
var _default = FilterMenu;
exports.default = _default;