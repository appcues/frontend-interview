"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Metric = exports.SmallCaps = exports.Caption = exports.P = exports.M2 = exports.H5 = exports.H4 = exports.H3 = exports.H2 = exports.H1 = exports.Text = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _chunkCfb1dc = require("./chunk-cfb1dc74.js");

var _layout = require("./layout.js");

require("./chunk-e8276423.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject2() {
  var data = (0, _chunkB2edacfb.a)(["\n  font-family: ", ";\n  font-size: ", ";\n  font-weight: ", ";\n\n  color: ", ";\n  text-align: ", ";\n\n  letter-spacing: 0;\n  line-height: 65px;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  font-size: 13px;\n  font-weight: 600;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.29;\n  letter-spacing: 0.7px;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.74);\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var TYPES = {
  PRIMARY: "primary",
  SECONDARY: "secondary",
  TERTIARY: "tertiary"
};
var colorOptions = {
  light: {
    primary: _chunkCfb1dc.a["$light-tint-100"],
    secondary: "rgba(255,255,255,0.85)",
    tertiary: "rgba(255,255,255,0.54)"
  },
  dark: {
    primary: _chunkCfb1dc.a["$gray-8"],
    secondary: _chunkCfb1dc.a["$gray-7"],
    tertiary: _chunkCfb1dc.a["$gray-5"]
  }
};

var Text = function Text(_ref) {
  var light = _ref.light,
      type = _ref.type,
      truncate = _ref.truncate,
      is = _ref.is,
      bold = _ref.bold,
      fontWeight = _ref.fontWeight,
      props = (0, _chunkB2edacfb.j)(_ref, ["light", "type", "truncate", "is", "bold", "fontWeight"]);
  var color = colorOptions[light ? "light" : "dark"][type];
  var truncateProps = {};

  if (truncate) {
    truncateProps.overflow = "hidden";
    truncateProps.maxWidth = "100%";
    truncateProps.textOverflow = "ellipsis";
    truncateProps.whiteSpace = "nowrap";

    if (typeof props.children === "string") {
      truncateProps.title = props.children;
    }

    if (is === "span") {
      truncateProps.is = "div";
    }
  }

  var mergedFontWeight = bold ? "bold" : fontWeight;
  return _react.default.createElement(_layout.Box, (0, _chunkB2edacfb.g)({
    is: is,
    color: color,
    fontWeight: mergedFontWeight
  }, truncateProps, props));
};

exports.Text = Text;
Text.propTypes = (0, _chunkB2edacfb.i)({}, _layout.Box.propTypes, {
  light: _propTypes.default.bool,
  truncate: _propTypes.default.bool,
  type: _propTypes.default.oneOf(Object.values(TYPES)),
  bold: _propTypes.default.bool
});
Text.defaultProps = (0, _chunkB2edacfb.i)({}, _layout.Box.defaultProps, {
  is: "span",
  truncate: false,
  type: "primary",
  light: false,
  bold: false
});
Text.enums = {
  type: TYPES
};
Text.displayName = "Text";

var H1 = function H1(props) {
  return _react.default.createElement(Text, props);
};

exports.H1 = H1;
H1.propTypes = Text.propTypes;
H1.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h1",
  fontSize: "2rem",
  fontWeight: 700,
  letterSpacing: "-0.0025rem",
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0,
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis",
  truncate: true
});
H1.displayName = "H1";

var H2 = function H2(props) {
  return _react.default.createElement(Text, props);
};

exports.H2 = H2;
H2.propTypes = Text.propTypes;
H2.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h2",
  fontSize: "1.5rem",
  fontWeight: 400,
  letterSpacing: 0,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0
});
H2.displayName = "H2";

var H3 = function H3(props) {
  return _react.default.createElement(Text, props);
};

exports.H3 = H3;
H3.propTypes = Text.propTypes;
H3.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h3",
  fontSize: "1.25rem",
  fontWeight: 500,
  letterSpacing: 0,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0
});
H3.displayName = "H3";

var H4 = function H4(props) {
  return _react.default.createElement(Text, props);
};

exports.H4 = H4;
H4.propTypes = Text.propTypes;
H4.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h4",
  fontSize: "1.06rem",
  fontWeight: 500,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0
});
H4.displayName = "H4";

var H5 = function H5(props) {
  return _react.default.createElement(Text, props);
};

exports.H5 = H5;
H5.propTypes = Text.propTypes;
H5.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h5",
  fontSize: "0.812rem",
  fontWeight: 600,
  lineHeight: 1.8,
  marginTop: 0,
  marginBottom: 0,
  letterSpacing: "0.05rem",
  textTransform: "uppercase"
});
H5.displayName = "H5";

var M2 = function M2(props) {
  return _react.default.createElement(Text, props);
};

exports.M2 = M2;
M2.propTypes = Text.propTypes;
M2.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "h2",
  fontSize: "1.5rem",
  fontWeight: "400",
  letterSpacing: 0,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0
});
M2.displayName = "M2";

var P = function P(props) {
  return _react.default.createElement(Text, props);
};

exports.P = P;
P.propTypes = Text.propTypes;
P.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "p",
  fontSize: "0.875rem",
  fontWeight: 400,
  letterSpacing: 0,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 16
});
P.displayName = "P";

var Caption = function Caption(props) {
  return _react.default.createElement(Text, props);
};

exports.Caption = Caption;
Caption.propTypes = Text.propTypes;
Caption.defaultProps = (0, _chunkB2edacfb.i)({}, Text.defaultProps, {
  is: "p",
  fontSize: "0.75rem",
  fontWeight: 400,
  letterSpacing: 0,
  lineHeight: 1.5,
  marginTop: 0,
  marginBottom: 0
});
Caption.displayName = "Caption";

var SmallCaps = _styledComponents.default.p.withConfig({
  displayName: "type__SmallCaps",
  componentId: "sc-1u8ztl6-0"
})(_templateObject());

exports.SmallCaps = SmallCaps;

var Metric = _styledComponents.default.h3.attrs({
  theme: function theme$$1(_ref2) {
    var dark = _ref2.dark,
        light = _ref2.light;
    return light && !dark ? "light" : "dark";
  },
  type: function type(props) {
    return props.type ? props.type : "primary";
  },
  align: function align(props) {
    return props.align ? props.align : "align";
  }
}).withConfig({
  displayName: "type__Metric",
  componentId: "sc-1u8ztl6-1"
})(_templateObject2(), _chunkCfb1dc.a["$font-muli"], function (props) {
  return props.large ? _chunkCfb1dc.a["$font-size-xxl"] : _chunkCfb1dc.a["$font-size-xl"];
}, _chunkCfb1dc.a["$font-weight-xs"], function (props) {
  return colorOptions[props.theme][props.type];
}, function (props) {
  return props.align || "left";
});

exports.Metric = Metric;
Text.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Text",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"span\"",
        "computed": false
      },
      "required": false
    },
    "truncate": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "type": {
      "defaultValue": {
        "value": "\"primary\"",
        "computed": false
      },
      "type": {
        "name": "enum",
        "value": [{
          "value": "\"primary\"",
          "computed": false
        }, {
          "value": "\"secondary\"",
          "computed": false
        }, {
          "value": "\"tertiary\"",
          "computed": false
        }]
      },
      "required": false,
      "description": ""
    },
    "light": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "bold": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    }
  },
  "composes": ["../layout/layout"]
};
H1.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H1",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h1\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"2rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "700",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "\"-0.0025rem\"",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "overflow": {
      "defaultValue": {
        "value": "\"hidden\"",
        "computed": false
      },
      "required": false
    },
    "whiteSpace": {
      "defaultValue": {
        "value": "\"nowrap\"",
        "computed": false
      },
      "required": false
    },
    "textOverflow": {
      "defaultValue": {
        "value": "\"ellipsis\"",
        "computed": false
      },
      "required": false
    },
    "truncate": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false
    }
  }
};
H2.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H2",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h2\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"1.5rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "400",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    }
  }
};
H3.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H3",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h3\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"1.25rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "500",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    }
  }
};
H4.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H4",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h4\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"1.06rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "500",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    }
  }
};
H5.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H5",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h5\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"0.812rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "600",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.8",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "\"0.05rem\"",
        "computed": false
      },
      "required": false
    },
    "textTransform": {
      "defaultValue": {
        "value": "\"uppercase\"",
        "computed": false
      },
      "required": false
    }
  }
};
M2.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "M2",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"h2\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"1.5rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "\"400\"",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    }
  }
};
P.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "P",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"p\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"0.875rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "400",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "16",
        "computed": false
      },
      "required": false
    }
  }
};
Caption.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Caption",
  "props": {
    "is": {
      "defaultValue": {
        "value": "\"p\"",
        "computed": false
      },
      "required": false
    },
    "fontSize": {
      "defaultValue": {
        "value": "\"0.75rem\"",
        "computed": false
      },
      "required": false
    },
    "fontWeight": {
      "defaultValue": {
        "value": "400",
        "computed": false
      },
      "required": false
    },
    "letterSpacing": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "lineHeight": {
      "defaultValue": {
        "value": "1.5",
        "computed": false
      },
      "required": false
    },
    "marginTop": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "marginBottom": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    }
  }
};
Text.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Text",
  "composes": ["./chunk-b2edacfb.js"]
};
H1.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H1"
};
H2.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H2"
};
H3.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H3"
};
H4.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H4"
};
H5.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "H5"
};
M2.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "M2"
};
P.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "P"
};
Caption.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Caption"
};