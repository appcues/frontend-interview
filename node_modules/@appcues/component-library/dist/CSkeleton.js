"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _layout = require("./layout.js");

require("prop-types");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: block;\n  border-radius: 3px;\n  animation: ", " 2s infinite;\n  background: ", ";\n  background-size: 1000px 100%;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var shimmer = (0, _styledComponents.keyframes)(["to{background-position:1000px 100%;}"]);
var Skeleton = (0, _styledComponents.default)(_layout.Box).withConfig({
  displayName: "CSkeleton__Skeleton",
  componentId: "sc-179j8no-0"
})(_templateObject(), shimmer, function (_ref) {
  var theme = _ref.theme;
  return "linear-gradient(to right, ".concat(theme["$gray-1"], " 4%, ").concat(theme["$gray-2"], " 25%, ").concat(theme["$gray-1"], " 36%)");
});

var CSkeleton = function CSkeleton(props) {
  return _react.default.createElement(Skeleton, (0, _chunkB2edacfb.g)({
    is: "span"
  }, props));
};

CSkeleton.displayName = "CSkeleton";
CSkeleton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CSkeleton"
};
var _default = CSkeleton;
exports.default = _default;
CSkeleton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CSkeleton"
};