"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _CFontIcon = _interopRequireDefault(require("./CFontIcon.js"));

var _layout = require("./layout.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject3() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n\n  position: relative;\n\n  padding: 2px 8px;\n  text-align: center;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  vertical-align: baseline;\n  border-radius: 6px;\n  white-space: nowrap;\n  user-select: none;\n\n  color: ", ";\n  background: ", ";\n\n  transition: all 0.2s ease;\n\n  &.isClickable,\n  &.isRemovable {\n    cursor: pointer;\n  }\n\n  &.isRemovable:hover {\n    padding-right: 32px;\n\n    & ", " {\n      opacity: 1;\n    }\n  }\n\n  &.forceHover,\n  &.isRemovable:hover,\n  &.isClickable:hover {\n    background-color: ", ";\n    color: ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: block;\n  position: absolute;\n  right: 0;\n  padding: 0 12px;\n  &:hover ", " {\n    color: ", ";\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  color: ", ";\n  opacity: 0;\n  transition: all 0.2s ease;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var CTag = function (_PureComponent) {
  (0, _chunkB2edacfb.f)(CTag, _PureComponent);

  function CTag(props) {
    var _this;

    (0, _chunkB2edacfb.b)(this, CTag);
    _this = (0, _chunkB2edacfb.d)(this, (0, _chunkB2edacfb.e)(CTag).call(this, props));
    (0, _chunkB2edacfb.h)((0, _chunkB2edacfb.m)(_this), "onClick", function (e) {
      e.preventDefault();
      e.stopPropagation();
      var _this$props = _this.props,
          onClick = _this$props.onClick,
          onClickRemove = _this$props.onClickRemove;
      var closeNode = _this.closeNode.current;

      if (!!onClickRemove && closeNode && closeNode.contains(e.target)) {
        onClickRemove();
      } else if (!!onClick) {
        onClick();
      }
    });
    _this.closeNode = _react.default.createRef();
    return _this;
  }

  (0, _chunkB2edacfb.c)(CTag, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          title = _this$props2.title,
          type = _this$props2.type,
          onClick = _this$props2.onClick,
          onClickRemove = _this$props2.onClickRemove,
          forceHover = _this$props2.forceHover,
          boxProps = (0, _chunkB2edacfb.j)(_this$props2, ["children", "className", "title", "type", "onClick", "onClickRemove", "forceHover"]);
      var isClickable = !!onClick;
      var isRemovable = !!onClickRemove;
      return _react.default.createElement(StyledTag, (0, _chunkB2edacfb.g)({}, boxProps, {
        onClick: isClickable || isRemovable ? this.onClick : undefined,
        className: (0, _classnames.default)(className, type, isClickable && "isClickable", forceHover && "forceHover", isRemovable && "isRemovable")
      }), children, isRemovable && _react.default.createElement(StyledCloseContainer, {
        innerRef: this.closeNode,
        title: "Remove tag",
        "aria-label": "Remove tag"
      }, _react.default.createElement(StyledCloseIcon, {
        className: "fas fa-times"
      })));
    }
  }]);
  return CTag;
}(_react.PureComponent);

(0, _chunkB2edacfb.h)(CTag, "displayName", "CTag");
(0, _chunkB2edacfb.h)(CTag, "propTypes", {
  className: _propTypes.default.string,
  title: _propTypes.default.string,
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,
  onClick: _propTypes.default.func,
  forceHover: _propTypes.default.bool,
  onClickRemove: _propTypes.default.func
});
(0, _chunkB2edacfb.h)(CTag, "defaultProps", {
  forceHover: false
});
var StyledCloseIcon = (0, _styledComponents.default)(_CFontIcon.default).withConfig({
  displayName: "CTag__StyledCloseIcon",
  componentId: "sc-19hlf9z-0"
})(_templateObject(), function (props) {
  return props.theme["$gray-6"];
});

var StyledCloseContainer = _styledComponents.default.a.withConfig({
  displayName: "CTag__StyledCloseContainer",
  componentId: "sc-19hlf9z-1"
})(_templateObject2(), StyledCloseIcon, function (props) {
  return props.theme["$red"];
});

var StyledTag = (0, _styledComponents.default)(_layout.Box).withConfig({
  displayName: "CTag__StyledTag",
  componentId: "sc-19hlf9z-2"
})(_templateObject3(), function (props) {
  return props.theme["$gray-7"];
}, function (props) {
  return props.theme["$gray-2"];
}, StyledCloseIcon, function (props) {
  return props.theme[props.backgroundColor || "$gray-3"];
}, function (props) {
  return props.theme[props.color || "$gray-8"];
});
CTag.__docgenInfo = {
  "description": "",
  "methods": [{
    "name": "onClick",
    "docblock": null,
    "modifiers": [],
    "params": [{
      "name": "e",
      "type": null
    }],
    "returns": null
  }],
  "displayName": "CTag",
  "props": {
    "forceHover": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "title": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "type": {
        "name": "union",
        "value": [{
          "name": "arrayOf",
          "value": {
            "name": "node"
          }
        }, {
          "name": "node"
        }]
      },
      "required": true,
      "description": ""
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "onClickRemove": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    }
  }
};
var _default = CTag;
exports.default = _default;