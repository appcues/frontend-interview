"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var counter = 0;

var nextName = function nextName() {
  return "selection-".concat(counter++);
};

var SelectionGroup = function (_PureComponent) {
  (0, _chunkB2edacfb.f)(SelectionGroup, _PureComponent);

  function SelectionGroup() {
    var _getPrototypeOf2;

    var _this;

    (0, _chunkB2edacfb.b)(this, SelectionGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _chunkB2edacfb.d)(this, (_getPrototypeOf2 = (0, _chunkB2edacfb.e)(SelectionGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _chunkB2edacfb.h)((0, _chunkB2edacfb.m)(_this), "autoGroupName", nextName());
    (0, _chunkB2edacfb.h)((0, _chunkB2edacfb.m)(_this), "getChildProps", function (optionProps) {
      var _this$props = _this.props,
          getChildCheckedState = _this$props.getChildCheckedState,
          onChange = _this$props.onChange;
      var className = optionProps.className,
          disabled = optionProps.disabled,
          value = optionProps.value;
      return {
        className: className,
        disabled: disabled || _this.props.disabled,
        name: _this.autoGroupName,
        onChange: onChange,
        checked: getChildCheckedState(optionProps)
      };
    });
    return _this;
  }

  (0, _chunkB2edacfb.c)(SelectionGroup, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.Children.map(this.props.children, function (child) {
        return _react.default.cloneElement(child, _this2.getChildProps(child.props));
      });
    }
  }]);
  return SelectionGroup;
}(_react.PureComponent);

(0, _chunkB2edacfb.h)(SelectionGroup, "propTypes", {
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
  children: _propTypes.default.node.isRequired,
  onChange: _propTypes.default.func.isRequired,
  getChildCheckedState: _propTypes.default.func.isRequired,
  isDisabled: _propTypes.default.bool
});
(0, _chunkB2edacfb.h)(SelectionGroup, "defaultProps", {
  value: null,
  isDisabled: false
});
SelectionGroup.__docgenInfo = {
  "description": "",
  "methods": [{
    "name": "getChildProps",
    "docblock": null,
    "modifiers": [],
    "params": [{
      "name": "optionProps",
      "type": null
    }],
    "returns": null
  }],
  "displayName": "SelectionGroup",
  "props": {
    "value": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "union",
        "value": [{
          "name": "string"
        }, {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        }]
      },
      "required": false,
      "description": ""
    },
    "isDisabled": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": true,
      "description": ""
    },
    "onChange": {
      "type": {
        "name": "func"
      },
      "required": true,
      "description": ""
    },
    "getChildCheckedState": {
      "type": {
        "name": "func"
      },
      "required": true,
      "description": ""
    }
  }
};
var _default = SelectionGroup;
exports.default = _default;