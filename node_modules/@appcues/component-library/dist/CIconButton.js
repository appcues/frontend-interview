"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CButton = _interopRequireDefault(require("./CButton.js"));

require("prop-types");

require("./layout.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  &.icon-button {\n    i {\n      margin: 0;\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var CIconButton = function CIconButton(props) {
  return _react.default.createElement(StyledIconButton, (0, _chunkB2edacfb.g)({}, props, {
    tabIndex: 0,
    className: (0, _classnames.default)(props.className, "icon-button")
  }));
};

CIconButton.propTypes = _CButton.default.propTypes;
CIconButton.defaultProps = (0, _chunkB2edacfb.i)({}, _CButton.default.defaultProps, {
  minWidth: 0,
  width: 40,
  height: 40,
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
});
CIconButton.displayName = "CIconButton";
var StyledIconButton = (0, _styledComponents.default)(_CButton.default).withConfig({
  displayName: "CIconButton__StyledIconButton",
  componentId: "sc-1uk1ngo-0"
})(_templateObject());
CIconButton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CIconButton",
  "props": {
    "minWidth": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "required": false
    },
    "width": {
      "defaultValue": {
        "value": "40",
        "computed": false
      },
      "required": false
    },
    "height": {
      "defaultValue": {
        "value": "40",
        "computed": false
      },
      "required": false
    },
    "display": {
      "defaultValue": {
        "value": "\"flex\"",
        "computed": false
      },
      "required": false
    },
    "alignItems": {
      "defaultValue": {
        "value": "\"center\"",
        "computed": false
      },
      "required": false
    },
    "justifyContent": {
      "defaultValue": {
        "value": "\"center\"",
        "computed": false
      },
      "required": false
    }
  },
  "composes": ["../CButton/CButton"]
};
var _default = CIconButton;
exports.default = _default;
CIconButton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CIconButton",
  "composes": ["./CButton.js"]
};