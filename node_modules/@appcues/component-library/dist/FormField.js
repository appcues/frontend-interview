"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _chunk216b = require("./chunk-216b6235.js");

var _FormGroup = _interopRequireDefault(require("./FormGroup.js"));

var _CTextInput = _interopRequireDefault(require("./CTextInput.js"));

require("./chunk-e192c2e5.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-8219403d.js");

require("./chunk-eb19ede6.js");

require("styled-components");

require("classnames");

require("./layout.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-f2932d1d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

require("./TextInputGroup.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getTextInputComponent = function getTextInputComponent(_ref) {
  var fieldProps = _ref.fieldProps,
      field = _ref.field,
      onChange = _ref.onChange,
      onBlur = _ref.onBlur;
  return _react.default.createElement(_CTextInput.default, (0, _chunkB2edacfb.g)({}, field, fieldProps, {
    onChange: onChange,
    onBlur: onBlur
  }));
};

var getComponentFromChildren = function getComponentFromChildren(_ref2) {
  var children = _ref2.children,
      fieldProps = _ref2.fieldProps,
      field = _ref2.field,
      onChange = _ref2.onChange,
      onBlur = _ref2.onBlur;
  return _react.default.Children.map(children, function (child) {
    return _react.default.cloneElement(child, (0, _chunkB2edacfb.i)({}, field, {}, fieldProps, {
      onChange: onChange,
      onBlur: onBlur
    }));
  });
};

var getComponent = function getComponent(_ref3) {
  var groupProps = _ref3.groupProps,
      children = _ref3.children,
      fieldProps = (0, _chunkB2edacfb.j)(_ref3, ["groupProps", "children"]);
  return function (_ref4) {
    var form = _ref4.form,
        field = _ref4.field;

    var onChange = function onChange(value) {
      return form.setFieldValue(field.name, value, true);
    };

    var onBlur = function onBlur(value) {
      return form.setFieldTouched(field.name, true);
    };

    var useChildren = !!children;
    var enhancedGroupProps = (0, _chunkB2edacfb.i)({}, groupProps, {
      errorText: form.touched[field.name] && form.errors[field.name]
    });
    var getComponentFunction = getTextInputComponent;

    if (useChildren) {
      getComponentFunction = getComponentFromChildren;
      enhancedGroupProps.useLabel = false;
    }

    return _react.default.createElement(_FormGroup.default, enhancedGroupProps, getComponentFunction({
      children: children,
      fieldProps: fieldProps,
      field: field,
      onChange: onChange,
      onBlur: onBlur
    }));
  };
};

var FormField = function FormField(_ref5) {
  var label = _ref5.label,
      withoutMargin = _ref5.withoutMargin,
      helperText = _ref5.helperText,
      children = _ref5.children,
      maxWidth = _ref5.maxWidth,
      fieldProps = (0, _chunkB2edacfb.j)(_ref5, ["label", "withoutMargin", "helperText", "children", "maxWidth"]);
  var groupProps = {
    label: label,
    withoutMargin: withoutMargin,
    helperText: helperText,
    maxWidth: maxWidth
  };
  return _react.default.createElement(_chunk216b.a, (0, _chunkB2edacfb.g)({}, fieldProps, {
    render: getComponent((0, _chunkB2edacfb.i)({
      groupProps: groupProps,
      children: children
    }, fieldProps))
  }));
};

FormField.propTypes = {
  name: _propTypes.default.string.isRequired,
  label: _propTypes.default.string.isRequired,
  withoutMargin: _propTypes.default.bool,
  helperText: _propTypes.default.string,
  children: _propTypes.default.node
};
FormField.defaultProps = {
  withoutMargin: false,
  helperText: "",
  children: null
};
FormField.displayName = "CForm.Field";
FormField.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CForm.Field",
  "props": {
    "withoutMargin": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "helperText": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "name": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    },
    "label": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    }
  }
};
var _default = FormField;
exports.default = _default;
FormField.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CForm.Field",
  "props": {
    "withoutMargin": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "helperText": {
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      },
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "name": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    },
    "label": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    }
  }
};