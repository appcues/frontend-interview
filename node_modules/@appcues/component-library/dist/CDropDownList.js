"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CFontIcon = _interopRequireDefault(require("./CFontIcon.js"));

var _chunkE8575d = require("./chunk-e8575d19.js");

var _layout = require("./layout.js");

var _chunk3b2cded = require("./chunk-3b2cded6.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-f2932d1d.js");

require("./chunk-eb19ede6.js");

require("./chunk-8219403d.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject5() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: flex;\n  position: relative;\n  width: 100%;\n  padding: 7px 24px 6px;\n  line-height: 26px;\n  font-weight: 700;\n  text-transform: uppercase;\n  font-size: ", ";\n  white-space: nowrap;\n  text-decoration: none;\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: block;\n  position: relative;\n  padding: 7px 24px 6px;\n  line-height: 26px;\n  font-size: ", ";\n  white-space: nowrap;\n  cursor: pointer;\n  text-decoration: none;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: ", ";\n  }\n  &.selected {\n    color: ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _chunkB2edacfb.a)(["\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  align-self: stretch;\n  padding: 10px;\n  min-width: 160px;\n  max-width: 400px;\n  border: 1px solid ", ";\n  border-radius: 6px;\n  transition: border-color 0.2s ease;\n  max-width: 400px;\n  cursor: pointer;\n  .input-value {\n    max-width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  &:focus {\n    border-color: ", ";\n    box-shadow: none;\n  }\n  &:hover {\n    color: ", ";\n  }\n  &::placeholder {\n    position: relative;\n    transform: none;\n    white-space: nowrap;\n    color: ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _chunkB2edacfb.a)(["\n  background-color: white;\n  position: absolute;\n  padding: 16px 0;\n  top: calc(100% + 3px);\n  margin-top: 0px;\n  list-style: none;\n  border-radius: 4px;\n  max-height: 300px;\n  overflow-y: auto;\n  box-shadow: ", ";\n  z-index: 3;\n  width: ", ";\n  padding: 0;\n  cursor: default;\n  &.menu--dropup {\n    bottom: calc(100% + 2px);\n    top: auto;\n  }\n\n  .option-detail-container {\n    display: block;\n    box-sizing: border-box;\n    padding: 9px 16px;\n    cursor: default;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _chunkB2edacfb.a)(["\n  position: relative;\n  outline: none;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  &:focus {\n    z-index: 1;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var reference = "CDropDownList_Item";

var CDropDownList = function CDropDownList(_ref) {
  var children = _ref.children,
      className = _ref.className,
      value = _ref.value,
      placeholder = _ref.placeholder,
      shouldDropUp = _ref.shouldDropUp,
      rest = (0, _chunkB2edacfb.j)(_ref, ["children", "className", "value", "placeholder", "shouldDropUp"]);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _chunkB2edacfb.l)(_useState, 2),
      menuIsOpen = _useState2[0],
      setMenuState = _useState2[1];

  var dropUpClass = shouldDropUp ? "menu--dropup" : "";

  var handleClick = function handleClick() {
    return setMenuState(function (prev) {
      return !prev;
    });
  };

  (0, _chunkE8575d.a)(reference, function () {
    return setMenuState(false);
  });
  return _react.default.createElement(DropdownContainer, (0, _chunkB2edacfb.g)({}, rest, {
    className: (0, _classnames.default)(className, "dropdown-button")
  }), _react.default.createElement(DropdownDummy, {
    onClick: handleClick,
    tabIndex: "0"
  }, _react.default.createElement("div", {
    className: "input-value"
  }, value ? value : placeholder), _react.default.createElement(_CFontIcon.default, {
    position: "absolute",
    right: "20px",
    fontSize: "20px",
    className: "fas fa-caret-down"
  })), menuIsOpen && _react.default.createElement(Menu, {
    className: (0, _classnames.default)(dropUpClass, "CDropDownList-menu"),
    onClick: function onClick(e) {
      return e.stopPropagation();
    }
  }, children));
};

CDropDownList.defaultProps = {
  shouldDropUp: false
};
CDropDownList.propTypes = {
  shouldDropUp: _propTypes.default.bool,
  className: _propTypes.default.string,
  children: _propTypes.default.any.isRequired,
  value: _propTypes.default.any.isRequired
};
var DropdownContainer = (0, _styledComponents.default)(_layout.Box).withConfig({
  displayName: "CDropDownList__DropdownContainer",
  componentId: "em53a-0"
})(_templateObject());

var Menu = _styledComponents.default.ul.withConfig({
  displayName: "CDropDownList__Menu",
  componentId: "em53a-1"
})(_templateObject2(), function (props) {
  return props.theme["$box-shadow-3"];
}, function (props) {
  return props.menuWidth ? props.menuWidth + "px" : "256px";
});

var DropdownDummy = _styledComponents.default.div.withConfig({
  displayName: "CDropDownList__DropdownDummy",
  componentId: "em53a-2"
})(_templateObject3(), function (props) {
  return props.theme["$gray-3"];
}, function (props) {
  return props.theme["$blue"];
}, function (props) {
  return props.theme["$gray-6"];
}, function (props) {
  return props.theme["$gray-5"];
});

var Item = _styledComponents.default.li.withConfig({
  displayName: "CDropDownList__Item",
  componentId: "em53a-3"
})(_templateObject4(), function (props) {
  return props.theme["$font-size-base"];
}, function (props) {
  return props.theme["$gray-2"];
}, function (props) {
  return props.theme["$blue"];
});

CDropDownList.Item = _react.default.memo(function (_ref2) {
  var selected = _ref2.selected,
      value = _ref2.value,
      children = _ref2.children,
      className = _ref2.className,
      rest = (0, _chunkB2edacfb.j)(_ref2, ["selected", "value", "children", "className"]);
  var id = (0, _chunk3b2cded.a)();
  return _react.default.createElement(Item, (0, _chunkB2edacfb.g)((0, _chunkB2edacfb.h)({
    "data-value": value,
    className: (0, _classnames.default)({
      selected: selected
    }),
    tabIndex: 0
  }, "className", (0, _classnames.default)(className, {
    selected: selected
  }, "".concat(reference, "-").concat(id))), rest), children);
});
CDropDownList.Item.displayName = "CDropDownList.Item";
CDropDownList.Label = _styledComponents.default.li.withConfig({
  displayName: "CDropDownList__Label",
  componentId: "em53a-4"
})(_templateObject5(), function (props) {
  return props.theme["$font-size-xs"];
});
CDropDownList.Label.displayName = "CDropDownList.Label";
CDropDownList.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CDropDownList",
  "props": {
    "shouldDropUp": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "type": {
        "name": "any"
      },
      "required": true,
      "description": ""
    },
    "value": {
      "type": {
        "name": "any"
      },
      "required": true,
      "description": ""
    }
  }
};
var _default = CDropDownList;
exports.default = _default;
CDropDownList.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CDropDownList",
  "props": {
    "shouldDropUp": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "children": {
      "type": {
        "name": "any"
      },
      "required": true,
      "description": ""
    },
    "value": {
      "type": {
        "name": "any"
      },
      "required": true,
      "description": ""
    }
  }
};