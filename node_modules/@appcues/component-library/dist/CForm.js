"use strict";

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BareCForm = exports.default = void 0;

var _chunkB2edacfb = require("./chunk-b2edacfb.js");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _chunk216b = require("./chunk-216b6235.js");

var _FormField = _interopRequireDefault(require("./FormField.js"));

var _FormGroup = _interopRequireDefault(require("./FormGroup.js"));

var _FormSubmitButton = _interopRequireDefault(require("./FormSubmitButton.js"));

var _layout = require("./layout.js");

require("./chunk-e192c2e5.js");

require("./chunk-76875e58.js");

require("./chunk-cb015231.js");

require("./chunk-8219403d.js");

require("./chunk-eb19ede6.js");

require("./CTextInput.js");

require("./TextInputGroup.js");

require("classnames");

require("./chunk-b15f6972.js");

require("./chunk-6104512b.js");

require("./chunk-f2932d1d.js");

require("./chunk-cfb1dc74.js");

require("./chunk-e8276423.js");

require("./CButton.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var BareCForm = function (_PureComponent) {
  (0, _chunkB2edacfb.f)(BareCForm, _PureComponent);

  function BareCForm() {
    (0, _chunkB2edacfb.b)(this, BareCForm);
    return (0, _chunkB2edacfb.d)(this, (0, _chunkB2edacfb.e)(BareCForm).apply(this, arguments));
  }

  (0, _chunkB2edacfb.c)(BareCForm, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          innerRef = _this$props.innerRef,
          children = _this$props.children,
          onSubmit = _this$props.onSubmit,
          initialValues = _this$props.initialValues,
          validationSchema = _this$props.validationSchema,
          props = (0, _chunkB2edacfb.j)(_this$props, ["innerRef", "children", "onSubmit", "initialValues", "validationSchema"]);
      var isChildNode = (0, _chunkB2edacfb.o)(children) === "object";

      if (isChildNode) {
        return _react.default.createElement(_chunk216b.c, (0, _chunkB2edacfb.g)({
          ref: innerRef
        }, {
          onSubmit: onSubmit,
          initialValues: initialValues,
          validationSchema: validationSchema
        }), function () {
          return _react.default.createElement(CForm.Element, props, children);
        });
      }

      return _react.default.createElement(_chunk216b.c, (0, _chunkB2edacfb.g)({
        ref: innerRef
      }, {
        children: children,
        onSubmit: onSubmit,
        initialValues: initialValues,
        validationSchema: validationSchema
      }));
    }
  }]);
  return BareCForm;
}(_react.PureComponent);

exports.BareCForm = BareCForm;
BareCForm.displayName = "CForm";
BareCForm.propTypes = {
  onSubmit: _propTypes.default.func.isRequired,
  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]).isRequired,
  initialValues: _propTypes.default.object.isRequired,
  validationSchema: _propTypes.default.object
};
BareCForm.defaultProps = {
  validationSchema: null
};

var CForm = _react.default.forwardRef(function (props, ref) {
  return _react.default.createElement(BareCForm, (0, _chunkB2edacfb.g)({
    innerRef: ref
  }, props));
});

CForm.displayName = BareCForm.displayName;

var StyledForm = function StyledForm(props) {
  return _react.default.createElement(_layout.Flex, props);
};

StyledForm.defaultProps = {
  is: _chunk216b.d,
  flexDirection: "column",
  alignItems: "flex-start"
};
CForm.Element = StyledForm;
CForm.Field = _FormField.default;
CForm.Group = _FormGroup.default;
CForm.SubmitButton = _FormSubmitButton.default;

CForm.Row = function (props) {
  return _react.default.createElement(_layout.Row, (0, _chunkB2edacfb.g)({
    gutter: 16
  }, props));
};

BareCForm.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CForm",
  "props": {
    "validationSchema": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "type": {
        "name": "object"
      },
      "required": false,
      "description": ""
    },
    "onSubmit": {
      "type": {
        "name": "func"
      },
      "required": true,
      "description": ""
    },
    "children": {
      "type": {
        "name": "union",
        "value": [{
          "name": "func"
        }, {
          "name": "node"
        }]
      },
      "required": true,
      "description": ""
    },
    "initialValues": {
      "type": {
        "name": "object"
      },
      "required": true,
      "description": ""
    }
  }
};
var _default = CForm;
exports.default = _default;